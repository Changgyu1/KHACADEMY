연산자(Operator) : 연산에 사용하는 기호
- 간단한 사칙연산부터, 비교연산자, 논리연산자, 조건연산자 가 있고, 이외에 다양한 종류가 있다.

- 1. 산술연산자 ( +, =, *, /, %)
- 산술 연산자는 숫자 데이터 타입의 변수들을 다룰 때 사용
- 기본적인 산술 연산을 실행 (덧셈, 뺄셈, 곱셈, 나눗셈, 나머지)

- 2. 대입연산자 (=)
- 변수에 값을 할당할 때 사용
- 오른쪽 피연산자의 값을 왼쪽 피연산자에 할당

- 3. 증감연산자
- 변수의 값을 1씩 증가시키거나 감소시킬 때 사용
- 3-1) 전위 증감 연산자(++x, --x)
		++ 항의 값에 1을 더한다.
- 3-2) 후위 증감 연산자(x++, x--)
		-- 항의 값에 1을 뺀다.

- 4. 비교연산자
- 값을 비교할 때 사용
- 크기나 등호 비교 등을 수행할 수 있음
- 두 개의 항 중 어느것이 큰지 작은지 다른지의 여부를 검사할 수 있음
- 비교연산자의 결과 값은 참(true) 또는 거짓(false)으로 반환
- (>) 왼쪽 항이 크면 참, 아니면 거짓을 반환
- (<) 왼쪽 항이 크면 거짓, 아니면 참을 반환
- (>=) 왼쪽 항이 오른쪽 항보다 크거나 같으면 참, 아니면 거짓을 반환
- (<=) 왼쪽 항이 오른쪽 항보다 작거나 같으면 참, 아니면 거짓을 반환
- (==) 두 항의 값이 같으면 참, 아니면 거짓을 반환
- (!=) 두 항의 값이 다르면 참, 아니면 거짓을 반환

- 5. 논리연산자(Logical)
- 논리 연산자는 논리적인 조건을 다룰 때 사용한다.
- &&(논리 AND), ||(논리 OR), !(논리 NOT)
- &&(논리곱) 두 항이 모두 참인 경우 참, 아니면 거짓
- ex) boolean val = (5 > 2) && (5 > 3);  // true
- ||(논리합) 두 항 중 하나의 항이라도 참이면 참
- ex) boolean val = (5 > 2) || (5 < 3);  // false
- !(논리부정) 참인 경우는 거짓으로 바꾸고, 거짓인 경우는 참으로 바꿈
- ex) boolean val = !(5 > 2);  // false
- ex) boolean val = !(5 < 2);  // true

- 6. 삼항 연산자(Ternary)
- 삼항 = 일항 ? 이항 : 삼항
- 조건을 평가하고 세 가지 값 중 하나를 반환함
- 조건 ? 값1 : 값2 형태로 사용
- 조건 ? 값1(=true): 값2(false)
- 값 1은 조건이 참일 때 출력
- 값 2는 조건이 거짓일 때 출력
- ex) 나이가 20이상은 성인인가 미성년자인가?
- int age = 20;
-             =     조건     ?  값1  :   값2    형태로 사용
-             =     조건     ?  값1(ture)  :   값2(false)
- String satus = (age >= 20) ? "성인" : "미성년자";